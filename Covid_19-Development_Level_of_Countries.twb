<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Covid_19-Forecast-Development_Level_of_Countries' path='/workbooks' revision='1.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Covid_19_jan' inline='true' name='federated.13t2avb1qp17ir10y4t7g1agrugf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid_19_jan' name='textscan.18922ay0nw68qi1g1ub1d19v7sbf'>
            <connection class='textscan' directory='C:/Users/anura/Desktop/Practice/Covid 19' filename='Covid_19_jan.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.18922ay0nw68qi1g1ub1d19v7sbf' name='Covid_19_jan.csv' table='[Covid_19_jan#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='weekly_cases' ordinal='2' />
            <column datatype='real' name='weekly_deaths' ordinal='3' />
            <column datatype='real' name='biweekly_cases' ordinal='4' />
            <column datatype='real' name='biweekly_deaths' ordinal='5' />
            <column datatype='real' name='new_cases' ordinal='6' />
            <column datatype='real' name='new_deaths' ordinal='7' />
            <column datatype='real' name='total_cases' ordinal='8' />
            <column datatype='real' name='total_deaths' ordinal='9' />
            <column datatype='string' name='continent' ordinal='10' />
            <column datatype='real' name='total_cases_per_million' ordinal='11' />
            <column datatype='real' name='total_deaths_per_million' ordinal='12' />
            <column datatype='real' name='population' ordinal='13' />
            <column datatype='real' name='gdp_per_capita' ordinal='14' />
            <column datatype='real' name='poverty_level' ordinal='15' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='16' />
            <column datatype='real' name='life_expectancy' ordinal='17' />
            <column datatype='real' name='human_development_index' ordinal='18' />
            <column datatype='real' name='Lat' ordinal='19' />
            <column datatype='real' name='Long' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.18922ay0nw68qi1g1ub1d19v7sbf' name='Covid_19_jan.csv' table='[Covid_19_jan#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='weekly_cases' ordinal='2' />
            <column datatype='real' name='weekly_deaths' ordinal='3' />
            <column datatype='real' name='biweekly_cases' ordinal='4' />
            <column datatype='real' name='biweekly_deaths' ordinal='5' />
            <column datatype='real' name='new_cases' ordinal='6' />
            <column datatype='real' name='new_deaths' ordinal='7' />
            <column datatype='real' name='total_cases' ordinal='8' />
            <column datatype='real' name='total_deaths' ordinal='9' />
            <column datatype='string' name='continent' ordinal='10' />
            <column datatype='real' name='total_cases_per_million' ordinal='11' />
            <column datatype='real' name='total_deaths_per_million' ordinal='12' />
            <column datatype='real' name='population' ordinal='13' />
            <column datatype='real' name='gdp_per_capita' ordinal='14' />
            <column datatype='real' name='poverty_level' ordinal='15' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='16' />
            <column datatype='real' name='life_expectancy' ordinal='17' />
            <column datatype='real' name='human_development_index' ordinal='18' />
            <column datatype='real' name='Lat' ordinal='19' />
            <column datatype='real' name='Long' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_cases]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>weekly_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_deaths]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>weekly_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>biweekly_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[biweekly_cases]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>biweekly_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>biweekly_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[biweekly_deaths]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>biweekly_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>poverty_level</remote-name>
            <remote-type>5</remote-type>
            <local-name>[poverty_level]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>poverty_level</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[Covid_19_jan.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Hospital Beds category' datatype='string' name='[Calculation_1106478136064507904]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [hospital_beds_per_thousand] &lt; 0.5&#13;&#10;THEN &apos;Very Less&apos;&#13;&#10;ELSEIF [hospital_beds_per_thousand] &lt; 1&#13;&#10;THEN &apos;Less&apos;&#13;&#10;ELSEIF [hospital_beds_per_thousand] &lt; 2&#13;&#10;THEN &apos;Medium&apos;&#13;&#10;ELSE &apos;Adequate&apos;&#13;&#10;END' />
      </column>
      <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
      </column>
      <column caption='Avg hospital beds' datatype='real' name='[Calculation_776026512002293763]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([hospital_beds_per_thousand])' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Covid_19_jan.csv' datatype='table' name='[__tableau_internal_object_id__].[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]' role='measure' type='quantitative' />
      <column caption='Biweekly Cases' datatype='real' name='[biweekly_cases]' role='measure' type='quantitative' />
      <column caption='Biweekly Deaths' datatype='real' name='[biweekly_deaths]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Cases' datatype='real' name='[weekly_cases]' role='measure' type='quantitative' />
      <column caption='Weekly Deaths' datatype='real' name='[weekly_deaths]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_52072870806073344]' derivation='None' name='[none:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/anura/Documents/My Tableau Repository/Datasources/Covid_19_jan.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/18/2021 05:22:30 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Covid_19_jan' increment-value='%null%' refresh-type='create' rows-inserted='65987' timestamp-start='2021-02-18 17:22:30.451' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>801</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>1</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weekly_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_cases</remote-alias>
              <ordinal>2</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7675</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weekly_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_deaths</remote-alias>
              <ordinal>3</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2324</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>biweekly_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[biweekly_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>biweekly_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8946</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>biweekly_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[biweekly_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>biweekly_deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3517</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases</remote-alias>
              <ordinal>6</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4136</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths</remote-alias>
              <ordinal>7</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1180</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>8</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13660</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>9</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5015</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>10</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases_per_million</remote-alias>
              <ordinal>11</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23812</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths_per_million</remote-alias>
              <ordinal>12</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12229</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>13</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>300</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gdp_per_capita</remote-alias>
              <ordinal>14</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>273</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>poverty_level</remote-name>
              <remote-type>5</remote-type>
              <local-name>[poverty_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>poverty_level</remote-alias>
              <ordinal>15</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospital_beds_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hospital_beds_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospital_beds_per_thousand</remote-alias>
              <ordinal>16</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>122</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[life_expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>life_expectancy</remote-alias>
              <ordinal>17</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>247</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>human_development_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[human_development_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>human_development_index</remote-alias>
              <ordinal>18</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>538</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>19</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>235</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Long</remote-alias>
              <ordinal>20</ordinal>
              <family>Covid_19_jan.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>230</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_52072870806073344:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;HD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VHD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid_19_jan.csv' id='Covid_19_jan.csv_6CE142B9B5694EA88907EEA2864202AB'>
            <properties context=''>
              <relation connection='textscan.18922ay0nw68qi1g1ub1d19v7sbf' name='Covid_19_jan.csv' table='[Covid_19_jan#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='real' name='weekly_cases' ordinal='2' />
                  <column datatype='real' name='weekly_deaths' ordinal='3' />
                  <column datatype='real' name='biweekly_cases' ordinal='4' />
                  <column datatype='real' name='biweekly_deaths' ordinal='5' />
                  <column datatype='real' name='new_cases' ordinal='6' />
                  <column datatype='real' name='new_deaths' ordinal='7' />
                  <column datatype='real' name='total_cases' ordinal='8' />
                  <column datatype='real' name='total_deaths' ordinal='9' />
                  <column datatype='string' name='continent' ordinal='10' />
                  <column datatype='real' name='total_cases_per_million' ordinal='11' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='12' />
                  <column datatype='real' name='population' ordinal='13' />
                  <column datatype='real' name='gdp_per_capita' ordinal='14' />
                  <column datatype='real' name='poverty_level' ordinal='15' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='16' />
                  <column datatype='real' name='life_expectancy' ordinal='17' />
                  <column datatype='real' name='human_development_index' ordinal='18' />
                  <column datatype='real' name='Lat' ordinal='19' />
                  <column datatype='real' name='Long' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Hospital Beds per Thousand Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_19_jan' name='federated.13t2avb1qp17ir10y4t7g1agrugf' />
          </datasources>
          <datasource-dependencies datasource='federated.13t2avb1qp17ir10y4t7g1agrugf'>
            <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[avg:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_52072870806073344]' derivation='None' name='[none:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_52072870806073344:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VHD&quot;</bucket>
              <bucket>&quot;HD&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;LD&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</column>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#82f86a' />
            <format attr='fill-below' id='refline1' value='#e74747' />
            <format attr='stroke-color' id='refline1' value='#000000' />
            <format attr='fill-above' id='refline3' value='#d6ffc7' />
            <format attr='fill-below' id='refline3' value='#ffd0d0' />
            <format attr='stroke-color' id='refline3' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' />
            </encodings>
            <reference-line axis-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' z-order='1' />
            <reference-line axis-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' z-order='2' />
            <reference-line axis-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' z-order='3' />
            <reference-line axis-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' enable-instant-analytics='true' formula='average' id='refline3' label='Average: &lt;Value&gt;' label-type='custom' probability='95' scope='per-pane' value-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' z-order='4' />
            <reference-line axis-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' enable-instant-analytics='true' formula='average' id='refline4' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' z-order='5' />
            <reference-line axis-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' enable-instant-analytics='true' formula='average' id='refline5' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' z-order='6' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.4640884399414063' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]</rows>
        <cols>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{51BF63A5-2982-4BDF-8AAB-EFD6EECD1A79}' />
    </worksheet>
    <worksheet name='Forecast New Cases Per Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_19_jan' name='federated.13t2avb1qp17ir10y4t7g1agrugf' />
          </datasources>
          <datasource-dependencies datasource='federated.13t2avb1qp17ir10y4t7g1agrugf'>
            <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_52072870806073344]' derivation='Attribute' name='[attr:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='Attribute' name='[attr:country:nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_cases]' derivation='Sum' forecast-column-base='[sum:new_cases:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[fVal:sum:new_cases:qk]' scope='rows' value='New Cases Per Day' />
            <format attr='title' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[tdy:date:qk]' scope='cols' value='Day' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Forecast Indicator:nk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:Calculation_52072870806073344:nk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>HDI category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:Calculation_52072870806073344:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Forecast indicator:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Forecast Indicator:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Day:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[tdy:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[fVal:sum:new_cases:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t2avb1qp17ir10y4t7g1agrugf].[fVal:sum:new_cases:qk]</rows>
        <cols>[federated.13t2avb1qp17ir10y4t7g1agrugf].[tdy:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Day-Trunc' range-size='30' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{199CE306-2742-45FB-9116-D58804EE5BF4}' />
    </worksheet>
    <worksheet name='Forecast New Cases Per Week'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_19_jan' name='federated.13t2avb1qp17ir10y4t7g1agrugf' />
          </datasources>
          <datasource-dependencies datasource='federated.13t2avb1qp17ir10y4t7g1agrugf'>
            <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_52072870806073344]' derivation='Attribute' name='[attr:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='Attribute' name='[attr:country:nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_cases]' derivation='Sum' forecast-column-base='[sum:new_cases:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[fVal:sum:new_cases:qk]' scope='rows' value='New Cases Per Week' />
            <format attr='title' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[twk:date:qk]' scope='cols' value='Week' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Forecast Indicator:nk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:Calculation_52072870806073344:nk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>HDI category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:Calculation_52072870806073344:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Forecast indicator:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Forecast Indicator:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week :&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[twk:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[fVal:sum:new_cases:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t2avb1qp17ir10y4t7g1agrugf].[fVal:sum:new_cases:qk]</rows>
        <cols>[federated.13t2avb1qp17ir10y4t7g1agrugf].[twk:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-periods='Week-Trunc' range-size='10' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A467C66E-5D54-488F-8A74-4EF05FA811DC}' />
    </worksheet>
    <worksheet name='HDI - GDP/capita - Poverty Level'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_19_jan' name='federated.13t2avb1qp17ir10y4t7g1agrugf' />
          </datasources>
          <datasource-dependencies datasource='federated.13t2avb1qp17ir10y4t7g1agrugf'>
            <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_52072870806073344]' derivation='None' name='[none:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[poverty_level]' role='measure' type='quantitative' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[poverty_level]' derivation='Sum' name='[sum:poverty_level:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_52072870806073344:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VHD&quot;</bucket>
              <bucket>&quot;HD&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;LD&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</column>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[sum:poverty_level:qk]' scope='rows' value='Poverty Level' />
            <format attr='title' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[sum:gdp_per_capita:qk]' scope='cols' value='GDP Per Capita' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t2avb1qp17ir10y4t7g1agrugf].[sum:poverty_level:qk]</rows>
        <cols>[federated.13t2avb1qp17ir10y4t7g1agrugf].[sum:gdp_per_capita:qk]</cols>
      </table>
      <simple-id uuid='{046A05EC-1E3E-4737-8F0A-6C9C0517114D}' />
    </worksheet>
    <worksheet name='Overview'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_19_jan' name='federated.13t2avb1qp17ir10y4t7g1agrugf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13t2avb1qp17ir10y4t7g1agrugf'>
            <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[country]' derivation='Attribute' name='[attr:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lat]' derivation='Avg' name='[avg:Lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Long]' derivation='Avg' name='[avg:Long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gdp_per_capita]' derivation='Avg' name='[avg:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_52072870806073344]' derivation='None' name='[none:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[poverty_level]' role='measure' type='quantitative' />
            <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[poverty_level]' derivation='Sum' name='[sum:poverty_level:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VHD&quot;</bucket>
              <bucket>&quot;HD&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;LD&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:Long:qk]' field-type='quantitative' max='21373513.23528938' min='-16569456.793899633' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:Lat:qk]' field-type='quantitative' max='10008338.41642765' min='-6183884.1381594548' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' />
              <lod column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:country:nk]' />
              <lod column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[sum:hospital_beds_per_thousand:qk]' />
              <lod column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:gdp_per_capita:qk]' />
              <lod column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_cases:qk]' />
              <lod column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_deaths:qk]' />
              <lod column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[sum:poverty_level:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#898989'>Country</run>
                <run bold='true' fontcolor='#787878'>&#9;:  </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>HDI category </run>
                <run bold='true' fontcolor='#787878'>&#9;:  </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>GDP per capita</run>
                <run bold='true' fontcolor='#000000'><![CDATA[	:  <[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:gdp_per_capita:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>Poverty level</run>
                <run bold='true' fontcolor='#000000'><![CDATA[	:  <[federated.13t2avb1qp17ir10y4t7g1agrugf].[sum:poverty_level:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>Hospital beds per thousand</run>
                <run bold='true' fontcolor='#000000'><![CDATA[  :  <[federated.13t2avb1qp17ir10y4t7g1agrugf].[sum:hospital_beds_per_thousand:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>Total Cases</run>
                <run bold='true' fontcolor='#000000'><![CDATA[	:  <[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_cases:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'>Total Deaths</run>
                <run bold='true' fontcolor='#000000'><![CDATA[	:  <[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_deaths:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.31784531474113464' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:Lat:qk]</rows>
        <cols>[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:Long:qk]</cols>
      </table>
      <simple-id uuid='{53354D7D-C187-4274-B016-5E482E1880E7}' />
    </worksheet>
    <worksheet name='Total Cases per million-Avg. Hospital Beds-Poverty Level'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases per million-Avg. Hospital Beds-
Poverty Level</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_19_jan' name='federated.13t2avb1qp17ir10y4t7g1agrugf' />
          </datasources>
          <datasource-dependencies datasource='federated.13t2avb1qp17ir10y4t7g1agrugf'>
            <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[avg:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[poverty_level]' derivation='Avg' name='[avg:poverty_level:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_52072870806073344]' derivation='None' name='[none:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[poverty_level]' role='measure' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]'>
            <groupfilter from='&quot;HD&quot;' function='range' level='[none:Calculation_52072870806073344:nk]' to='&quot;VHD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VHD&quot;</bucket>
              <bucket>&quot;HD&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;LD&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:country:nk]' to='&quot;Turkey&quot;' />
              <groupfilter from='&quot;Uganda&quot;' function='range' level='[none:country:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</column>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_cases_per_million:qk]' scope='rows' value='Total Cases Per Million' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:poverty_level:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>HDI category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases Per Million:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_cases_per_million:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Hospital Beds Per Thousand:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Poverty Level:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:poverty_level:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.3314917087554932' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_cases_per_million:qk]</rows>
        <cols>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{F1571D97-E214-48CD-BB6E-111E313836CE}' />
    </worksheet>
    <worksheet name='Total Deaths per million-Avg. Hospital Beds-Poverty Level'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_19_jan' name='federated.13t2avb1qp17ir10y4t7g1agrugf' />
          </datasources>
          <datasource-dependencies datasource='federated.13t2avb1qp17ir10y4t7g1agrugf'>
            <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[avg:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[poverty_level]' derivation='Avg' name='[avg:poverty_level:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_52072870806073344]' derivation='None' name='[none:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[poverty_level]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]'>
            <groupfilter from='&quot;HD&quot;' function='range' level='[none:Calculation_52072870806073344:nk]' to='&quot;VHD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VHD&quot;</bucket>
              <bucket>&quot;HD&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;LD&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:country:nk]' to='&quot;Turkey&quot;' />
              <groupfilter from='&quot;Uganda&quot;' function='range' level='[none:country:nk]' to='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter from='&quot;Venezuela&quot;' function='range' level='[none:country:nk]' to='&quot;World&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</column>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_deaths_per_million:qk]' scope='rows' value='Total Deaths Per Million' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:poverty_level:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>HDI category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Deaths Per Million:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_deaths_per_million:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Hospital Beds Per Thousand:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Poverty Level:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:poverty_level:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.5966851711273193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_deaths_per_million:qk]</rows>
        <cols>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{60A205F0-6C19-4554-8559-B89DAFADAD56}' />
    </worksheet>
    <worksheet name='Total Deaths per million-Hospital Beds category-Poverty Level'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_19_jan' name='federated.13t2avb1qp17ir10y4t7g1agrugf' />
          </datasources>
          <datasource-dependencies datasource='federated.13t2avb1qp17ir10y4t7g1agrugf'>
            <column caption='Hospital Beds category' datatype='string' name='[Calculation_1106478136064507904]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [hospital_beds_per_thousand] &lt; 0.5&#13;&#10;THEN &apos;Very Less&apos;&#13;&#10;ELSEIF [hospital_beds_per_thousand] &lt; 1&#13;&#10;THEN &apos;Less&apos;&#13;&#10;ELSEIF [hospital_beds_per_thousand] &lt; 2&#13;&#10;THEN &apos;Medium&apos;&#13;&#10;ELSE &apos;Adequate&apos;&#13;&#10;END' />
            </column>
            <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[avg:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[poverty_level]' derivation='Avg' name='[avg:poverty_level:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1106478136064507904]' derivation='None' name='[none:Calculation_1106478136064507904:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_52072870806073344]' derivation='None' name='[none:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[poverty_level]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_1106478136064507904:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adequate&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Less&quot;</bucket>
              <bucket>&quot;Very Less&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]'>
            <groupfilter from='&quot;HD&quot;' function='range' level='[none:Calculation_52072870806073344:nk]' to='&quot;VHD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VHD&quot;</bucket>
              <bucket>&quot;HD&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;LD&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:country:nk]' to='&quot;Turkey&quot;' />
              <groupfilter from='&quot;Uganda&quot;' function='range' level='[none:country:nk]' to='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter from='&quot;Venezuela&quot;' function='range' level='[none:country:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</column>
            <column>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_deaths_per_million:qk]' scope='rows' value='Total Deaths Per Million' />
            <encoding attr='space' class='0' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_deaths_per_million:qk]' field-type='quantitative' max='2500.0' min='-543.83725085000003' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_1106478136064507904:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]' />
              <tooltip column='[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:poverty_level:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>HDI category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Deaths Per Million:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_deaths_per_million:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Hospital Beds Per Thousand:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:hospital_beds_per_thousand:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Poverty Level:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t2avb1qp17ir10y4t7g1agrugf].[avg:poverty_level:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.5966851711273193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_1106478136064507904:nk] * [federated.13t2avb1qp17ir10y4t7g1agrugf].[max:total_deaths_per_million:qk])</rows>
        <cols>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{B4A2C3DF-EFD8-4F4D-9D7E-4484583BF90C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Quickview'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Covid_19_jan' name='federated.13t2avb1qp17ir10y4t7g1agrugf' />
      </datasources>
      <datasource-dependencies datasource='federated.13t2avb1qp17ir10y4t7g1agrugf'>
        <column caption='HDI category' datatype='string' name='[Calculation_52072870806073344]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF ([human_development_index] &lt; 0.55)&#13;&#10;THEN &apos;LD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.70)&#13;&#10;THEN &apos;MD&apos;&#13;&#10;ELSEIF ([human_development_index] &lt; 0.80)&#13;&#10;THEN &apos;HD&apos;&#13;&#10;ELSE &apos;VHD&apos;&#13;&#10;END' />
        </column>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Calculation_52072870806073344]' derivation='None' name='[none:Calculation_52072870806073344:nk]' pivot='key' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='17' param='horz' w='99002' x='499' y='978'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='7' param='horz' w='99002' x='499' y='978'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98044' id='5' w='99002' x='499' y='978'>
                <zone h='49022' id='3' name='Overview' w='49499' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49022' id='9' name='Forecast New Cases Per Day' w='49499' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49022' id='12' name='Forecast New Cases Per Week' w='49503' x='49998' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49022' id='14' name='Total Cases per million-Avg. Hospital Beds-Poverty Level' w='49503' x='49998' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8557' id='13' mode='checkdropdown' name='Forecast New Cases Per Week' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' w='10474' x='89027' y='52200' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8557' id='10' mode='checkdropdown' name='Forecast New Cases Per Day' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' w='10474' x='38155' y='51956' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='21149' id='8' name='Overview' pane-specification-id='0' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' w='7294' x='42955' y='7457' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='20293' id='15' name='Total Cases per million-Avg. Hospital Beds-Poverty Level' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' w='8105' x='91584' y='611' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12103' id='11' name='Forecast New Cases Per Day' pane-specification-id='2' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Forecast Indicator:nk]' w='8728' x='6234' y='55990' />
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='9169' id='18' w='41209' x='9227' y='122'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='8'><![CDATA[VHD  :  Very High Development(0.8 <= HDI) | HD     :  High Development(0.7 <= HDI < 0.8)]]></run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000' fontsize='8'><![CDATA[MD    :  Medium Development(0.55 <= HDI < 0.7) | LD      :  Low Development(HDI < 0.55)]]></run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='64' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98044' id='63' param='vert' w='99002' x='499' y='978'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='9169' id='18' w='41209' x='9227' y='122'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='8'><![CDATA[VHD  :  Very High Development(0.8 <= HDI) | HD     :  High Development(0.7 <= HDI < 0.8)]]></run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='8'><![CDATA[MD    :  Medium Development(0.55 <= HDI < 0.7) | LD      :  Low Development(HDI < 0.55)]]></run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='3' is-fixed='true' name='Overview' w='49499' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='21149' id='8' name='Overview' pane-specification-id='0' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' w='7294' x='42955' y='7457'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='20293' id='15' mode='checkdropdown' name='Total Cases per million-Avg. Hospital Beds-Poverty Level' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' w='8105' x='91584' y='611'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='14' is-fixed='true' name='Total Cases per million-Avg. Hospital Beds-Poverty Level' w='49503' x='49998' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8557' id='10' mode='checkdropdown' name='Forecast New Cases Per Day' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' w='10474' x='38155' y='51956'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='9' is-fixed='true' name='Forecast New Cases Per Day' w='49499' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12103' id='11' name='Forecast New Cases Per Day' pane-specification-id='2' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Forecast Indicator:nk]' w='8728' x='6234' y='55990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8557' id='13' mode='checkdropdown' name='Forecast New Cases Per Week' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' w='10474' x='89027' y='52200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='12' is-fixed='true' name='Forecast New Cases Per Week' w='49503' x='49998' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7E9B36C0-9715-4B75-B13D-17D734E57C18}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Quickview'>
      <viewpoints>
        <viewpoint name='Forecast New Cases Per Day'>
          <zoom type='entire-view' />
          <highlight field='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Forecast New Cases Per Week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overview'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Cases per million-Avg. Hospital Beds-Poverty Level'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C49EE917-80FF-4D47-9E4C-CD6E7FB53938}' />
    </window>
    <window class='worksheet' name='Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[attr:country:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BB4D4A8-FC12-4F1E-9333-6CEC98A0F7F6}' />
    </window>
    <window class='worksheet' name='HDI - GDP/capita - Poverty Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='color' />
            <card param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22201C1E-9781-43F7-8F9E-E0FF465F4F5B}' />
    </window>
    <window class='worksheet' name='Average Hospital Beds per Thousand Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='color' />
            <card param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{154A97C3-1B76-4300-A69B-C8533978720D}' />
    </window>
    <window class='worksheet' name='Total Cases per million-Avg. Hospital Beds-Poverty Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='color' />
            <card param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58BBDAA5-DFEF-4CB6-854D-FA74997337B9}' />
    </window>
    <window class='worksheet' name='Total Deaths per million-Avg. Hospital Beds-Poverty Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='color' />
            <card param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{680197C6-DCF7-4361-A304-C9AC16857FA5}' />
    </window>
    <window class='worksheet' name='Total Deaths per million-Hospital Beds category-Poverty Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_1106478136064507904:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38323C60-D0DE-427E-AC75-67C4920F3809}' />
    </window>
    <window class='worksheet' name='Forecast New Cases Per Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Forecast Indicator:nk]' type='color' />
            <card mode='checkdropdown' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[md:date:ok]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3B4744C-D37B-4C4B-AD92-AC009298AA07}' />
    </window>
    <window class='worksheet' name='Forecast New Cases Per Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Forecast Indicator:nk]' type='color' />
            <card mode='checkdropdown' param='[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:Calculation_52072870806073344:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[none:country:nk]</field>
            <field>[federated.13t2avb1qp17ir10y4t7g1agrugf].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA7CACBB-A302-4548-80FA-21771F775C9C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Hospital Beds per Thousand Population' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast New Cases Per Day' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast New Cases Per Week' width='192'>
      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
      2TAgWVgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='HDI - GDP/capita - Poverty Level' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
      H/0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Quickview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Cases per million-Avg. Hospital Beds-Poverty Level' width='192'>
      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
      1119SR8H+J4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Deaths per million-Avg. Hospital Beds-Poverty Level' width='192'>
      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
      Qs+lhBZfWCWzlkoJ/fwxWjot5v7yr0Tk2/95yTk5oWezIpnOXjhuYn5ZvOOPvym+/J2jYnlm
      XvzV158RL/ROitzQkyL+tXcJdf6c0LWcEEKITC4jYqmUODu6IFRNE7qaFXo6IdJnz4mZP/6Y
      mPqdjwg1EhEzf/xxEX30MaHrukjn0kJbc4/V6VMi+f0PCm1pcvX3Wk5k1Eze80hmk2I5tSTS
      ufTF61ueEtHP7hOpRz+2+tlpOaHnUqu+01IpMftnfyGWvvf9gs9a+eQnP/nJK1Kja0DPJpmP
      ZTl0YD/Dg+coDwbRdX3VP3G+h9B1HZFNkn70o6h9j5A7830oP4BuK1p1jM/u577G19IYaM4v
      QwikQDPYfOi6jqZpF+vKZFj4s78g9uhjpJ79L6SpB5BtHnR/06pyllIRPvHwHzIbm+Ggq5X5
      j32c+FM/I/n0T5Bm/g/abDfCWYbS+Dp0IciNPEP6B+8n9mQPiWe7STx3FPurXsXnHjrJt5/s
      5dUHa4l9+UskXzyO9c67kJtfT/yHjxB+4CtYDh7AUuRHkSVu31uBLEHy+RdY/PRnkMpKMVVV
      MR9J8NEHfoIsSdQHPSuyIoPJfkHu5NNPs/j5L2Dd14lw2NEzGeJPPonkdmPp6EDXdcJf+AdO
      PHqEvzqxRGWxmxKvHafVTHNVEXd11uLxu7m7o4rygAt17izq0JOo536EFh4lW3kbf/PTT/KD
      F57jB4/H6Wwoxf38X5B+4sssfv0oUqAY2523Y66rI/aTn6JUVpCuLuVPH/lDMtk0jYGWC88I
      ZylKy5sQFteqZ/TVFx7g0bM/4rbqO5GQLlybjMyP+x7hH49+kduq78SiWBBmJ3LZPpTmn0OY
      HBfK0AYeI/PEXyA3/Ry6pKBpGlomQ/yJJ5H8PixtbavfP1W90WMACQQr/5BWpUUpmBfI6sTx
      nn9Cn+0he+JrKFYnUoEZY4/9GnZ0kWU873k36twcmTMvIDliSFYP8pryfXYf7zvwi9QFGjD7
      vHh//n1okQjZwXNIzmKs+9+H+cAvwvlBp7B7kJwBAh/6bXLLZvTlJUxeD2+/ew8Hm4N4nTay
      b3kL6swhnK97LUgSjrvvQrJasFZV0W6x0F5/Mb+ovaMd7T3vxtHZiSzL2CwmfC4bbodl3dlz
      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
    </thumbnail>
    <thumbnail height='192' name='Total Deaths per million-Hospital Beds category-Poverty Level' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
